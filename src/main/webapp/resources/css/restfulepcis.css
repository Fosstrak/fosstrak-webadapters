@charset "UTF-8";
body {
    /*font: 100% Verdana, Arial, Helvetica, sans-serif;*/
    font: normal 120% "Trebuchet MS", Verdana, Helvetica, Arial,sans-serif !important;
    background: #39414A url(../images/background.jpg) repeat-x 100% 0;

    margin: 0; /* Es empfiehlt sich, margin (Rand) und padding (Auffüllung) des Body-Elements auf 0 einzustellen, um unterschiedlichen Browser-Standardeinstellungen Rechnung zu tragen. */
    padding: 0;
    text-align: center; /* Hierdurch wird der Container in IE 5*-Browsern zentriert. Dem Text wird dann im #container-Selektor die Standardausrichtung left (links) zugewiesen. */
    color: #000000;
}

/* Tipps für elastische Layouts:
1. Da die Gesamtgröße elastischer Layouts von der Standardschriftgröße des Benutzers abhängt, sind diese Layouts weniger berechenbar. Bei korrekter Verwendung haben sie außerdem für Personen, die größere Schriften benötigen, einen höheren Nutzwert, weil die Zeilenlänge proportional bleibt.
2. Die Größe der divs in diesem Layout basiert auf der Originalschriftgröße (100%) im Body-Element. Wenn Sie die Textgröße durch eine Einstellung wie font-size: 80% im Body-Element oder im #container global verringern, wird das gesamte Layout proportional verkleinert. Sie sollten die Breiten der verschiedenen divs vergrößern, um hierfür einen Ausgleich zu schaffen.
3. Wenn Sie in den einzelnen divs unterschiedliche Werte für die Schriftgröße angegeben, anstatt die Schriftgröße im Design global zu ändern (z. B. wenn #sidebar1 die Schriftgröße 70% zugewiesen wird und #mainContent die Größe 85%), so wird die Gesamtgröße der einzelnen divs proportional geändert. Sie sollten anhand der endgültig gewählten Schriftgröße entsprechende Anpassungen vornehmen.
*/
.oneColElsCtrHdr #container {
    width: 95%;/*46em;*/  /* Mit dieser Breite wird ein Container erstellt, der in ein 800 Pixel breites Browserfenster passt, sofern für den Text die Standardschriftgröße des Browsers übernommen wird. */
    background: #FFFFFF;
    margin: 0 auto; /* Durch automatische Ränder (in Verbindung mit einer Breite) wird die Seite zentriert. */
    border: 0px solid #FFFFFF;
    text-align: left; /* Hierdurch wird die Einstellung text-align: center im Body-Element überschrieben. */
}
.oneColElsCtrHdr #header {
    background: #0f1923; /*192839*/
    padding: 0 10px 0 20px;  /* Diese Auffüllung entspricht der linksbündigen Ausrichtung der Elemente in den divs, die darunter erscheinen. Wenn im #header anstelle von Text ein Bild eingesetzt wird, sollten Sie die Auffüllung entfernen. */
}
.oneColElsCtrHdr #header h1 {
    color: #FFFFFF;
    font: bold 300% Verdana, Helvetica, Arial, sans-serif !important;
    margin: 0; /* Wenn Sie den Rand des letzten Elements im #header-div auf 0 einstellen, können Sie das Auftreten unerwarteter Abstände zwischen divs vermeiden. Wenn das div einen Rahmen hat, ist dies unnötig, weil dieser Rahmen die gleiche Wirkung hat. */
    padding: 10px 0; /* Durch die Verwendung der Auffüllung anstelle von Rändern lässt sich gewährleisten, dass das Element die Kanten des div nicht berührt. */
}
.powered #logos h2 {
    color: #FFFFFF;
    font: bold 200% Verdana, Helvetica, Arial, sans-serif !important;
}
.oneColElsCtrHdr #mainContent {
    padding: 0 20px; /* padding (Auffüllung) bezeichnet den Innenabstand und margin (Rand) den Außenabstand der div -Box. */
    background: #FFFFFF;
}
.oneColElsCtrHdr #footer {
    padding: 0 10px; /* Diese Auffüllung entspricht der linksbündigen Ausrichtung der Elemente in den divs, die darunter erscheinen. */
    background:#C0C0C0;
}
.oneColElsCtrHdr #footer p {
    margin: 0; /* Wenn Sie die Ränder des ersten Elements in der Fußzeile auf 0 einstellen, können Sie unerwartete Abstände zwischen divs vermeiden. */
    padding: 10px 0; /* Durch die Verwendung der Auffüllung bei diesem Element entsteht genau wie bei einem Rand ein Leerraum, aber ohne die potenziellen Abstandsprobleme. */
}

div.footer {
    padding: 0 10px; /* Diese Auffüllung entspricht der linksbündigen Ausrichtung der Elemente in den divs, die darunter erscheinen. */
    background: #39414A; /*#0f1923*/
    color: #FFFFFF;
    font: bold 132% Verdana, Helvetica, Arial, sans-serif !important;
}

a:link {color:blue}
a:visited {color:blue}
a:hover {color:navy}
a:active {color:blue}

.oneColElsCtrHdr #greylink a:link {color:gray}
.oneColElsCtrHdr #greylink a:visited {color:gray}
.oneColElsCtrHdr #greylink a:hover {color:navy}
.oneColElsCtrHdr #greylink a:active {color:gray}
