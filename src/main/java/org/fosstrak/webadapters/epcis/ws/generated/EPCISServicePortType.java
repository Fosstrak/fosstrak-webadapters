package org.fosstrak.webadapters.epcis.ws.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "EPCISServicePortType", targetNamespace = "urn:epcglobal:epcis:wsdl:1")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EPCISServicePortType {

    /**
     * 
     * @param parms
     * @return
     *     returns ch.diuf.unifr.softeng.gen.ArrayOfString
     * @throws SecurityExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetQueryNamesResult", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "getQueryNamesReturn")
    public ArrayOfString getQueryNames(
            @WebParam(name = "GetQueryNames", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") EmptyParms parms)
            throws ImplementationExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse;

    /**
     * 
     * @param parms
     * @return
     *     returns ch.diuf.unifr.softeng.gen.VoidHolder
     * @throws SubscribeNotPermittedExceptionResponse
     * @throws SecurityExceptionResponse
     * @throws DuplicateSubscriptionExceptionResponse
     * @throws InvalidURIExceptionResponse
     * @throws NoSuchNameExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws SubscriptionControlsExceptionResponse
     * @throws QueryTooComplexExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws QueryParameterExceptionResponse
     */
    @WebMethod
    @WebResult(name = "SubscribeResult", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "subscribeReturn")
    public VoidHolder subscribe(
            @WebParam(name = "Subscribe", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") Subscribe parms)
            throws DuplicateSubscriptionExceptionResponse, ImplementationExceptionResponse, InvalidURIExceptionResponse, NoSuchNameExceptionResponse, QueryParameterExceptionResponse, QueryTooComplexExceptionResponse, SecurityExceptionResponse, SubscribeNotPermittedExceptionResponse, SubscriptionControlsExceptionResponse, ValidationExceptionResponse;

    /**
     * 
     * @param parms
     * @return
     *     returns ch.diuf.unifr.softeng.gen.VoidHolder
     * @throws SecurityExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws NoSuchSubscriptionExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "UnsubscribeResult", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "unsubscribeReturn")
    public VoidHolder unsubscribe(
            @WebParam(name = "Unsubscribe", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") Unsubscribe parms)
            throws ImplementationExceptionResponse, NoSuchSubscriptionExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse;

    /**
     * 
     * @param parms
     * @return
     *     returns ch.diuf.unifr.softeng.gen.ArrayOfString
     * @throws SecurityExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws NoSuchNameExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetSubscriptionIDsResult", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "getSubscriptionIDsReturn")
    public ArrayOfString getSubscriptionIDs(
            @WebParam(name = "GetSubscriptionIDs", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") GetSubscriptionIDs parms)
            throws ImplementationExceptionResponse, NoSuchNameExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse;

    /**
     * 
     * @param parms
     * @return
     *     returns ch.diuf.unifr.softeng.gen.QueryResults
     * @throws SecurityExceptionResponse
     * @throws QueryTooLargeExceptionResponse
     * @throws NoSuchNameExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws QueryTooComplexExceptionResponse
     * @throws QueryParameterExceptionResponse
     */
    @WebMethod
    @WebResult(name = "QueryResults", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "pollReturn")
    public QueryResults poll(
            @WebParam(name = "Poll", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") Poll parms)
            throws ImplementationExceptionResponse, NoSuchNameExceptionResponse, QueryParameterExceptionResponse, QueryTooComplexExceptionResponse, QueryTooLargeExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse;

    /**
     * 
     * @param parms
     * @return
     *     returns java.lang.String
     * @throws SecurityExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetStandardVersionResult", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "getStandardVersionReturn")
    public String getStandardVersion(
            @WebParam(name = "GetStandardVersion", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") EmptyParms parms)
            throws ImplementationExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse;

    /**
     * 
     * @param parms
     * @return
     *     returns java.lang.String
     * @throws SecurityExceptionResponse
     * @throws ValidationExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetVendorVersionResult", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "getVendorVersionReturn")
    public String getVendorVersion(
            @WebParam(name = "GetVendorVersion", targetNamespace = "urn:epcglobal:epcis-query:xsd:1", partName = "parms") EmptyParms parms)
            throws ImplementationExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse;
}
